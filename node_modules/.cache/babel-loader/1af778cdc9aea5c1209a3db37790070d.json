{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeremy\\\\Documents\\\\node-js-projects\\\\picture_test\\\\picture_test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport SearchBox from './Components/SearchBox';\nimport CardList from './Components/CardList';\nimport FiltersBar from './Components/FiltersBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [heroes, setHeroes] = useState([]);\n  const [filteredHeroes, setFilteredHeroes] = useState([]); //Position of the currently selected hero in the heroes array\n\n  const [selectedHeroPos, setSelectedHeroPos] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [filters, setFilters] = useState([]); //FUNCTIONS \n  //This function is used to ensure that shifts of the CardList do not exceed the bounds of the heroes array\n\n  const shiftPos = i => {\n    var newPos = i;\n    if (newPos < 0 || newPos >= filteredHeroes.length) return;\n    setSelectedHeroPos(newPos);\n  };\n\n  const addFilter = s => {\n    setFilters([...filters, s]);\n  };\n\n  const removeFilter = s => {\n    let i = filters.findIndex(f => f.name === s.name);\n    let f = filters;\n    f.splice(i);\n    setFilters(f);\n  };\n\n  const setFilter = (selected, filter) => {\n    selected ? removeFilter(filter) : addFilter(filter);\n  }; //EFFECTS\n  //On start, get all heroes from the database\n\n\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      const result = await fetch('http://localhost:5000/', {\n        method: 'GET',\n        mode: 'cors'\n      });\n      let h = await result.json();\n      setHeroes(h);\n      setFilteredHeroes(h);\n      console.log(filteredHeroes);\n      setIsLoading(false);\n    };\n\n    fetchHeroes();\n  }, []); //When a card is selected, that card will be focused on in the viewer\n\n  useEffect(() => {\n    var elem = document.getElementsByClassName('selected');\n\n    if (elem != null && elem[0] != null) {\n      elem[0].classList.remove('selected');\n    }\n\n    var selected = document.getElementById('card-' + selectedHeroPos);\n\n    if (selected != null) {\n      selected.classList.add('selected');\n    }\n\n    var width, margin;\n    var card = document.querySelector('.card');\n\n    if (card != null) {\n      var s = getComputedStyle(card);\n      width = s.width;\n      var m = document.querySelector('.card_container');\n      margin = getComputedStyle(m).marginRight;\n      var e = document.getElementById('hero_tape_container');\n\n      if (e != null) {\n        e.style.left = -(parseInt(width.replace('px', '')) + parseInt(margin.replace('px', '')) * 3) * selectedHeroPos + 500 + 'px';\n      }\n    }\n  }, [selectedHeroPos]); //When a name is provided by the user, the hero whose name is closest to the query is selected/FIND THE BEST MATCH\n\n  useEffect(async () => {\n    let docs = filteredHeroes.filter(hero => hero.name.toLowerCase().startsWith(query.toLowerCase()));\n    console.log(docs);\n\n    if (docs.length == 0) {\n      docs = filteredHeroes.filter(hero => hero.name.toLowerCase().includes(query.toLowerCase()));\n      console.log(docs);\n    }\n\n    if (docs.length == 0) {\n      return;\n    } //Find the index of the item\n\n\n    let pos = filteredHeroes.findIndex(hero => docs[0]._id == hero._id);\n    if (pos) setSelectedHeroPos(pos);\n  }, [query]); //When the filters are updated, then get all the heroes that pass each filter\n\n  useEffect(() => {\n    if (filters.length == 0) {\n      setFilteredHeroes(heroes);\n      return;\n    }\n\n    let h = heroes;\n    filters.forEach(f => {\n      h = h.filter(hero => f(hero));\n    });\n    setFilteredHeroes(h);\n    setSelectedHeroPos(0);\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero_card_page\",\n      children: [/*#__PURE__*/_jsxDEV(FiltersBar, {\n        setAttribute: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        getQuery: q => setQuery(q)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hero_tape_container\",\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          heroes: filteredHeroes,\n          pos: selectedHeroPos,\n          adjustPos: shiftPos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/MpZKpiiAzb50W+K5xYo91dqv78=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jeremy/Documents/node-js-projects/picture_test/picture_test/src/App.js"],"names":["useEffect","useLayoutEffect","useState","SearchBox","CardList","FiltersBar","App","heroes","setHeroes","filteredHeroes","setFilteredHeroes","selectedHeroPos","setSelectedHeroPos","isLoading","setIsLoading","query","setQuery","filters","setFilters","shiftPos","i","newPos","length","addFilter","s","removeFilter","findIndex","f","name","splice","setFilter","selected","filter","fetchHeroes","result","fetch","method","mode","h","json","console","log","elem","document","getElementsByClassName","classList","remove","getElementById","add","width","margin","card","querySelector","getComputedStyle","m","marginRight","e","style","left","parseInt","replace","docs","hero","toLowerCase","startsWith","includes","pos","_id","forEach","q"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useLayoutEffect, useState } from 'react'\nimport SearchBox from './Components/SearchBox';\nimport CardList from './Components/CardList';\nimport FiltersBar from './Components/FiltersBar';\n\nfunction App() {\n \n  const[heroes, setHeroes] = useState([])\n  const[filteredHeroes, setFilteredHeroes] = useState([])\n  //Position of the currently selected hero in the heroes array\n  const[selectedHeroPos, setSelectedHeroPos] = useState(0)\n  const[isLoading, setIsLoading] = useState(true)\n  const[query, setQuery] = useState(\"\")\n  const[filters, setFilters] = useState([])\n\n  //FUNCTIONS \n  //This function is used to ensure that shifts of the CardList do not exceed the bounds of the heroes array\n  const shiftPos = (i) => {\n    var newPos = i;\n    if (newPos < 0 || newPos >= filteredHeroes.length)\n      return;\n    setSelectedHeroPos(newPos);\n  }\n\n  const addFilter = (s) => {\n    setFilters([...filters, s]);\n  }\n\n  const removeFilter = (s) => {\n    let i = filters.findIndex(f => f.name === s.name);\n    let f = filters;\n    f.splice(i);\n    setFilters(f)\n  }\n\n  const setFilter = (selected, filter) => {\n    selected?removeFilter(filter):addFilter(filter);\n}\n\n  //EFFECTS\n\n  //On start, get all heroes from the database\n  useEffect(() => {\n    const fetchHeroes = async () => {\n\n      const result = await fetch('http://localhost:5000/', {\n        method: 'GET',\n        mode: 'cors',\n      })\n\n      let h = await result.json();\n      setHeroes(h);\n      setFilteredHeroes(h);\n      console.log(filteredHeroes)\n      setIsLoading(false)\n    }\n\n    fetchHeroes()}, \n    [])\n\n  //When a card is selected, that card will be focused on in the viewer\n  useEffect(() => {\n    var elem = document.getElementsByClassName('selected');\n    if (elem != null && elem[0] != null)\n    {\n      elem[0].classList.remove('selected');\n    }\n    var selected = document.getElementById('card-' + selectedHeroPos);\n    if (selected != null)\n    {\n      selected.classList.add('selected');\n    }\n    \n    var width, margin;\n    var card = document.querySelector('.card');\n    if (card != null)\n    {\n      var s = getComputedStyle(card);\n      width = s.width;\n      var m = document.querySelector('.card_container');\n      margin = getComputedStyle(m).marginRight;\n\n      var e = document.getElementById('hero_tape_container');\n      if (e != null)\n      {\n        e.style.left = (-(parseInt(width.replace('px', '')) + parseInt(margin.replace('px', '')) * 3) * selectedHeroPos)  + 500 + 'px';\n      }\n    }\n  }, [selectedHeroPos])\n\n  //When a name is provided by the user, the hero whose name is closest to the query is selected/FIND THE BEST MATCH\n  useEffect(async () => {\n    let docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).startsWith(query.toLowerCase()));\n    console.log(docs);\n    if (docs.length == 0)\n    {\n      docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).includes(query.toLowerCase()));\n      console.log(docs);\n    }\n    if (docs.length == 0)\n    {\n      return;\n    }\n\n    //Find the index of the item\n    let pos = filteredHeroes.findIndex((hero) => docs[0]._id == hero._id);\n    if (pos)\n      setSelectedHeroPos(pos);\n  }, [query])\n\n  //When the filters are updated, then get all the heroes that pass each filter\n  useEffect(() => {\n    \n    if (filters.length == 0)\n    {\n      setFilteredHeroes(heroes);\n      return;\n    }\n  \n    let h = heroes;\n    filters.forEach((f) => {\n      h = h.filter(hero => f(hero));\n    })\n\n    setFilteredHeroes(h);\n    setSelectedHeroPos(0);\n    \n  }, [filters])\n  return (\n    <div className=\"App\">\n      <div className=\"hero_card_page\">\n        <FiltersBar setAttribute={setFilter} />\n        <SearchBox getQuery={(q) => setQuery(q) }/> \n        <div id=\"hero_tape_container\">\n          {/*The CardList will take the array of heroes that are to be displayed, as well as methods for changing what those heroes are*/}\n          <CardList heroes={filteredHeroes} pos={selectedHeroPos} adjustPos={shiftPos} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}