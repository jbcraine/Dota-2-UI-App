{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeremy\\\\Documents\\\\node-js-projects\\\\picture_test\\\\picture_test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport SearchBox from './Components/SearchBox';\nimport CardList from './Components/CardList';\nimport FiltersBar from './Components/FiltersBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [heroes, setHeroes] = useState([]);\n  const [filteredHeroes, setFilteredHeroes] = useState([]); //Position of the currently selected hero in the heroes array\n\n  const [selectedHeroPos, setSelectedHeroPos] = useState(-1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  const [filters, setFilters] = useState([]);\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const [listLimit, setListLimit] = useState(122);\n  const [ascending, setAscending] = useState(1);\n  const [secondaryFilters, setSecondaryFilters] = useState([]); //#region Functions\n  //This function is used to ensure that shifts of the CardList do not exceed the bounds of the heroes array\n\n  const shiftPos = i => {\n    var newPos = i;\n    if (newPos < 0 || newPos >= listLimit || newPos >= filteredHeroes.length) return;\n    setSelectedHeroPos(newPos);\n  };\n\n  const addFilter = async s => {\n    console.log(filters);\n    setFilters([...filters, s]);\n    console.log(filters);\n  };\n\n  const removeFilter = async s => {\n    console.log(filters);\n    setFilters(filters.filter(f => f.name !== s.name));\n    console.log(filters);\n  };\n\n  const setFilter = (selected, filter) => {\n    selected ? removeFilter(filter) : addFilter(filter);\n  };\n\n  const addSecondaryFilter = secondaryFilter => {\n    if (secondaryFilters.length == 3) {\n      return;\n    } else {\n      console.log(secondaryFilter);\n      setSecondaryFilters([...secondaryFilters, secondaryFilter]);\n    }\n  };\n\n  const removeSecondaryFilter = id => {\n    console.log(id);\n    setSecondaryFilters(secondaryFilters.filter(sf => sf.id != id));\n  };\n\n  const sortHeroes = arr => {\n    return arr.sort((a, b) => {\n      let i = 1,\n          j = -1;\n      i *= ascending;\n      j *= ascending;\n      return a[orderBy] > b[orderBy] ? i : j;\n    }).map(i => i);\n  }; //#endregion\n  //#region Effects\n  //On start, get all heroes from the database\n\n\n  useEffect(() => {\n    const fetchHeroes = async () => {\n      const result = await fetch('http://localhost:5000/', {\n        method: 'GET',\n        mode: 'cors'\n      });\n      let h = await result.json();\n      setHeroes(h);\n      setFilteredHeroes(h);\n    };\n\n    fetchHeroes();\n  }, []); //When a card is selected, that card will be focused on in the viewer\n\n  useEffect(() => {\n    var elem = document.getElementsByClassName('selected_card');\n\n    if (elem != null && elem[0] != null) {\n      elem[0].classList.remove('selected_card');\n    }\n\n    var selected = document.getElementById('card-' + selectedHeroPos);\n\n    if (selected != null) {\n      selected.classList.add('selected_card');\n    }\n\n    var width, margin;\n    var card = document.querySelector('.card');\n\n    if (card != null) {\n      var s = getComputedStyle(card);\n      width = s.width;\n      var m = document.querySelector('.card_container');\n      margin = getComputedStyle(m).marginRight;\n      var e = document.getElementById('hero_tape_container');\n\n      if (e != null) {\n        e.style.left = -(parseFloat(width.replace('px', '')) + parseFloat(margin.replace('px', '')) * 2.35) * selectedHeroPos + 500 + 'px';\n      }\n    }\n  }, [selectedHeroPos]); //When a name is provided by the user, the hero whose name is closest to the query is selected/FIND THE BEST MATCH\n\n  useEffect(() => {\n    let docs = filteredHeroes.filter(hero => hero.name.toLowerCase().startsWith(query.toLowerCase()));\n    console.log(docs);\n\n    if (docs.length === 0) {\n      docs = filteredHeroes.filter(hero => hero.name.toLowerCase().includes(query.toLowerCase()));\n      console.log(docs);\n    }\n\n    if (docs.length === 0) {\n      return;\n    } //Find the index of the item\n\n\n    let pos = filteredHeroes.findIndex(hero => docs[0]._id === hero._id);\n    if (pos >= 0) setSelectedHeroPos(pos);\n  }, [query]); //When the filters are updated, then get all the heroes that pass each filter\n\n  useEffect(() => {\n    let h = heroes;\n    filters.forEach(f => {\n      h = h.filter(hero => f(hero));\n    });\n    secondaryFilters.forEach(sf => {\n      h = h.filter(hero => sf.filter(hero));\n    });\n    setFilteredHeroes(sortHeroes(h));\n    setSelectedHeroPos(0);\n  }, [filters, secondaryFilters]);\n  useEffect(() => {\n    //setSelectedHeroPos(0);\n    console.log(\"Loaded\");\n  }, [isLoading]);\n  useEffect(() => {\n    setFilteredHeroes(sortHeroes(filteredHeroes));\n  }, [orderBy, ascending]); //#endregion \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero_card_page\",\n      children: [/*#__PURE__*/_jsxDEV(FiltersBar, {\n        setAttribute: setFilter,\n        addSecondaryFilter: addSecondaryFilter,\n        delSecondaryFilter: removeSecondaryFilter,\n        setOrderBy: setOrderBy,\n        getLimit: l => setListLimit(l),\n        setAscending: setAscending,\n        secondaryFilters: secondaryFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        getQuery: q => setQuery(q)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hero_tape_container\",\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          heroes: filteredHeroes.slice(0, listLimit),\n          pos: selectedHeroPos,\n          adjustPos: shiftPos,\n          isLoading: isLoading,\n          setIsLoading: setIsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YiYKamz225ybwqLWlES+q1fAaJ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jeremy/Documents/node-js-projects/picture_test/picture_test/src/App.js"],"names":["useEffect","useState","SearchBox","CardList","FiltersBar","App","heroes","setHeroes","filteredHeroes","setFilteredHeroes","selectedHeroPos","setSelectedHeroPos","isLoading","setIsLoading","query","setQuery","filters","setFilters","orderBy","setOrderBy","listLimit","setListLimit","ascending","setAscending","secondaryFilters","setSecondaryFilters","shiftPos","i","newPos","length","addFilter","s","console","log","removeFilter","filter","f","name","setFilter","selected","addSecondaryFilter","secondaryFilter","removeSecondaryFilter","id","sf","sortHeroes","arr","sort","a","b","j","map","fetchHeroes","result","fetch","method","mode","h","json","elem","document","getElementsByClassName","classList","remove","getElementById","add","width","margin","card","querySelector","getComputedStyle","m","marginRight","e","style","left","parseFloat","replace","docs","hero","toLowerCase","startsWith","includes","pos","findIndex","_id","forEach","l","q","slice"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport SearchBox from './Components/SearchBox';\nimport CardList from './Components/CardList';\nimport FiltersBar from './Components/FiltersBar';\n\nfunction App() {\n \n  const[heroes, setHeroes] = useState([])\n  const[filteredHeroes, setFilteredHeroes] = useState([])\n  //Position of the currently selected hero in the heroes array\n  const[selectedHeroPos, setSelectedHeroPos] = useState(-1)\n  const[isLoading, setIsLoading] = useState(true)\n  const[query, setQuery] = useState(\"\")\n  const[filters, setFilters] = useState([])\n  const[orderBy, setOrderBy] = useState(\"name\");\n  const[listLimit, setListLimit] = useState(122);\n  const[ascending, setAscending] = useState(1);\n  const[secondaryFilters, setSecondaryFilters] = useState([])\n\n//#region Functions\n  //This function is used to ensure that shifts of the CardList do not exceed the bounds of the heroes array\n  const shiftPos = (i) => {\n    var newPos = i;\n    if (newPos < 0 || newPos >= listLimit || newPos >= filteredHeroes.length)\n      return;\n    setSelectedHeroPos(newPos);\n  }\n\n  const addFilter = async (s) => {\n    console.log(filters)\n    setFilters([...filters, s]);\n    console.log(filters);\n  }\n\n  const removeFilter = async(s) => {\n    console.log(filters)\n    setFilters(filters.filter(f => f.name !== s.name))\n    console.log(filters)\n  }\n\n  const setFilter = (selected, filter) => {\n    selected?removeFilter(filter):addFilter(filter);\n}\n\n  const addSecondaryFilter = (secondaryFilter) => {\n    if (secondaryFilters.length == 3)\n    {\n      return;\n    }\n    else\n    {\n      console.log(secondaryFilter)\n      setSecondaryFilters([...secondaryFilters, secondaryFilter])\n    }\n  }\n\n  const removeSecondaryFilter = (id) => {\n    console.log(id)\n    setSecondaryFilters(secondaryFilters.filter((sf) => sf.id != id));\n  }\n\n  const sortHeroes = (arr) => {\n    return arr.sort((a, b) => {\n      let i = 1, j = -1;\n      i *= ascending;\n      j *= ascending;\n      return a[orderBy]>b[orderBy]?i:j;\n    }).map(i => i)\n  }\n//#endregion\n//#region Effects\n\n\n  //On start, get all heroes from the database\n  useEffect(() => {\n    const fetchHeroes = async () => {\n\n      const result = await fetch('http://localhost:5000/', {\n        method: 'GET',\n        mode: 'cors',\n      })\n\n      let h = await result.json();\n      setHeroes(h);\n      setFilteredHeroes(h);\n    }\n\n    fetchHeroes();}, \n    [])\n\n  //When a card is selected, that card will be focused on in the viewer\n  useEffect(() => {\n    var elem = document.getElementsByClassName('selected_card');\n    if (elem != null && elem[0] != null)\n    {\n      elem[0].classList.remove('selected_card');\n    }\n    var selected = document.getElementById('card-' + selectedHeroPos);\n    if (selected != null)\n    {\n      selected.classList.add('selected_card');\n    }\n    \n    var width, margin;\n    var card = document.querySelector('.card');\n    if (card != null)\n    {\n      var s = getComputedStyle(card);\n      width = s.width;\n      var m = document.querySelector('.card_container');\n      margin = getComputedStyle(m).marginRight;\n\n      var e = document.getElementById('hero_tape_container');\n      if (e != null)\n      {\n        e.style.left = (-(parseFloat(width.replace('px', '')) + parseFloat(margin.replace('px', '')) * 2.35) * selectedHeroPos)  + 500 + 'px';\n      }\n    }\n  }, [selectedHeroPos])\n\n  //When a name is provided by the user, the hero whose name is closest to the query is selected/FIND THE BEST MATCH\n  useEffect(() => {\n    let docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).startsWith(query.toLowerCase()));\n    console.log(docs);\n    if (docs.length === 0)\n    {\n      docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).includes(query.toLowerCase()));\n      console.log(docs);\n    }\n    if (docs.length === 0)\n    {\n      return;\n    }\n\n    //Find the index of the item\n    let pos = filteredHeroes.findIndex((hero) => docs[0]._id === hero._id);\n    \n    if (pos >= 0)\n      setSelectedHeroPos(pos);\n  }, [query])\n\n  //When the filters are updated, then get all the heroes that pass each filter\n  useEffect(() => {\n    let h = heroes;\n    filters.forEach((f) => {\n      h = h.filter(hero => f(hero));\n    })\n\n    secondaryFilters.forEach((sf) => {\n      h = h.filter((hero) => sf.filter(hero));\n    })\n\n    setFilteredHeroes(sortHeroes(h));\n    setSelectedHeroPos(0);\n    \n  }, [filters, secondaryFilters])\n\n  useEffect(() => {\n    //setSelectedHeroPos(0);\n    console.log(\"Loaded\")\n  }, [isLoading])\n\n  useEffect(() => {\n    setFilteredHeroes(sortHeroes(filteredHeroes));\n  }, [orderBy, ascending])\n\n//#endregion \n  \nreturn (\n    <div className=\"App\">\n      <div className=\"hero_card_page\">\n        <FiltersBar \n          setAttribute={setFilter} \n          addSecondaryFilter={addSecondaryFilter}\n          delSecondaryFilter={removeSecondaryFilter} \n          setOrderBy={setOrderBy} \n          getLimit={(l) => setListLimit(l)} \n          setAscending={setAscending} \n          secondaryFilters={secondaryFilters}\n          />\n        <SearchBox getQuery={(q) => setQuery(q) }/> \n        <div id=\"hero_tape_container\">\n          {/*The CardList will take the array of heroes that are to be displayed, as well as methods for changing what those heroes are*/}\n          <CardList heroes={filteredHeroes.slice(0, listLimit)} pos={selectedHeroPos} adjustPos={shiftPos} isLoading={isLoading} setIsLoading={setIsLoading}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}