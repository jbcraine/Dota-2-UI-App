{"version":3,"sources":["Components/Ability.js","Components/AbilityList.js","Components/CardPopout.js","Components/HeroCard.js","Components/ShiftButton.js","Components/CardList.js","Components/AttributeButton.js","Components/AttributeList.js","Components/SecondaryFilter.js","Components/OperatorList.js","Components/SecondaryFiltersMenu.js","Components/SearchBox.js","Components/FiltersBar.js","App.js","reportWebVitals.js","index.js"],"names":["Ability","abilityName","abilityIcon","dist","className","src","alt","AbilityList","key","abilities","count","map","a","ability_name","ability_img","length","_id","CardPopout","heroInfo","id","base_hp","hp_regen","base_mana","mana_regen","min_dmg","max_dmg","BAT","atck_range","projectile_speed","armor","move_spd","turn_rate","day_vision","night_vision","str_strt","str_gain","agi_strt","agi_gain","int_strt","int_gain","HeroCard","hero","selected","index","select","useState","attr","setAttr","infoSelected","setInfoSelected","useEffect","attribute","onClick","name","toUpperCase","hero_img","ShiftButton","adjustPos","CardList","heroes","pos","shiftPos","isLoading","setIsLoading","console","log","onWheel","event","preventDefault","deltaY","AttributeButton","image","icon","filter","setAttribute","c","setSelected","AttributeList","showName","value","label","options","setOptions","onChange","e","find","opt","target","o","SecondaryFilter","i","delFilter","OperatorList","setSelectedOp","operatorOptions","fnc","b","op","SecondaryFiltersMenu","addFilter","selectedAttr","setSelectedAttr","selectedOp","setValue","f","s","type","Math","random","opLabel","attrLabel","SearchBox","getQuery","text","setText","placeholder","q","autoFocus","FiltersBar","addSecondaryFilter","delSecondaryFilter","setOrderBy","getLimit","setAscending","secondaryFilters","setQuery","limit","setLimit","attrF","atckF","atck_type","sexF","sex","sf","htmlFor","v","result","replace","onLimitChange","maxLength","defaultChecked","beginningSize","parseInt","heroesPerDecque","App","setHeroes","filteredHeroes","setFilteredHeroes","limitedFilteredHeroes","setLimitedFilteredHeroes","selectedHeroPos","setSelectedHeroPos","query","filters","setFilters","orderBy","listLimit","setListLimit","ascending","setSecondaryFilters","heroDecque","setHeroDecque","incrementPos","slice","setPos","half","half1","half2","j","unshift","push","removeFilter","sortHeroes","arr","sort","fetchHeroes","fetch","method","mode","json","h","size","Array","docs","toLowerCase","startsWith","includes","findIndex","forEach","secondaryFilter","l","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5b294e0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Ability = ({ abilityName, abilityIcon, dist }) => {\r\n\r\n    return (\r\n        /*<div className = \"ability_icon_container\" style={{left: `calc(${d} - 60px)`}}>*/\r\n        <div className = \"ability_icon_container\" >\r\n            <img className = \"ability_icon\" src={abilityIcon} alt={abilityName}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ability\r\n","import React from 'react'\r\nimport Ability from './Ability'\r\n\r\nconst AbilityList = ( {key, abilities} ) => {\r\n    let count = 0;\r\n    let increment = 50;\r\n\r\n    return (\r\n        <div className=\"abilities_bar\">\r\n            {abilities.map((a) => <Ability key = {a._id} abilityName = {a.ability_name} abilityIcon = {a.ability_img} dist = {((count += 1) / abilities.length) * 100}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AbilityList\r\n","import React from 'react'\r\n\r\nconst CardPopout = ({ heroInfo, id }) => {\r\n    return (\r\n        <div className = \"card_popout\" id={id}>\r\n            <div className= \"hp_and_mana_container\">\r\n                    <div className= \"hp_mana_bar\" id= \"hp\">\r\n                        <div className=\"base_value\">{heroInfo.base_hp}</div>\r\n                        <div className=\"regen_value\">+{heroInfo.hp_regen}</div>\r\n                    </div>\r\n                    <div className= \"hp_mana_bar\" id= \"mana\">\r\n                        <div className=\"base_value\">{heroInfo.base_mana}</div>\r\n                        <div className=\"regen_value\">+{heroInfo.mana_regen}</div>\r\n                    </div>\r\n            </div>\r\n\r\n            <div className= \"column_barrier\" />\r\n\r\n            <div className= \"damage_armor_speed_containers_container\">\r\n                <div className= \"damage_armor_speed_container\">\r\n                    <div className= \"stat\">\r\n                        <img src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_damage.png\" />\r\n                        {heroInfo.min_dmg}{'-'}{heroInfo.max_dmg}\r\n                    </div>\r\n                    <div className= \"stat\">\r\n                        <img src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_attack_time.png\" />\r\n                        {heroInfo.BAT}\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <img src= \"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_attack_range.png\" />\r\n                        {heroInfo.atck_range}\r\n                    </div>\r\n                    {heroInfo.projectile_speed != -1 ? (<div className=\"stat\">\r\n                        <img src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_projectile_speed.png\" />\r\n                        {heroInfo.projectile_speed}\r\n                    </div>):(null)}\r\n                </div>\r\n\r\n                <div className= \"damage_armor_speed_container\">\r\n                    <div className= \"stat\">\r\n                        <img src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_armor.png\" />\r\n                        {heroInfo.armor}\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <img src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_movement_speed.png\" />\r\n                        {heroInfo.move_spd}\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <img src= \"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_turn_rate.png\" />\r\n                        {heroInfo.turn_rate}\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                        <img src= \"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react//heroes/stats/icon_vision.png\" />\r\n                        {heroInfo.day_vision + '/' +heroInfo.night_vision}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className= \"column_barrier\" />\r\n\r\n            <div className= \"attribute_holder_container\">\r\n                <div className= \"attribute_holder\">\r\n                    <img className=\"attribute_img\" src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_strength.png\" />\r\n                    <div className=\"base_stat\">{heroInfo.str_strt}</div>\r\n                    <div className=\"stat_gain\">+{heroInfo.str_gain}</div>\r\n                </div>\r\n                <div className=\"attribute_holder\">\r\n                    <img className=\"attribute_img\" src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_agility.png\" />\r\n                    <div className=\"base_stat\">{heroInfo.agi_strt}</div>\r\n                    <div className=\"stat_gain\">+{heroInfo.agi_gain}</div>\r\n                </div>\r\n                <div className=\"attribute_holder\">\r\n                    <img className=\"attribute_img\" src=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_intelligence.png\" />\r\n                    <div className=\"base_stat\">{heroInfo.int_strt}</div>\r\n                    <div className=\"stat_gain\">+{heroInfo.int_gain}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPopout\r\n","import React, { useState, useEffect } from 'react'\r\nimport AbilityList from './AbilityList'\r\nimport CardPopout from './CardPopout';\r\n\r\nconst HeroCard = ({ hero, selected, index, select }) => {\r\n    //If the HeroCard is selected, then increase its scale.\r\n    //Cards are selected when they are in the center of the deque\r\n    const [attr, setAttr] = useState(\"\");\r\n    const [infoSelected, setInfoSelected] = useState(false)\r\n\r\n    useEffect(() => {\r\n        switch(hero.attribute)\r\n        {\r\n            case \"STR\":\r\n                setAttr(\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_strength.png\")\r\n                break;\r\n            case \"AGI\":\r\n                setAttr(\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_agility.png\")\r\n                break;\r\n            case \"INT\":\r\n                setAttr(\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_intelligence.png\")\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }, [])\r\n\r\n    //On deselect, setInfoSelected(false)\r\n    useEffect(() => {\r\n        setInfoSelected(false);\r\n    }, [selected])\r\n\r\n\r\n    return (\r\n        <div className=\"card_container\" onClick={select}>\r\n            <div className={`card ${selected?`selected_card`:``}`} id={`card-${index}`}>\r\n                <div className=\"card_outer\">\r\n                    <div className=\"info_button_container\">\r\n                        <i className=\"fas fa-info-circle\" onClick={() => setInfoSelected(!infoSelected)} />\r\n                    </div>\r\n                    <div className=\"main_attribute_container\">\r\n                        <img className=\"main_attribute_image\" src={attr} />\r\n                    </div>\r\n                    <div className=\"card_inner\">\r\n                        <div className=\"name_container\">\r\n                            <div className=\"hero_name\">{hero.name.toUpperCase()}</div>\r\n                        </div>\r\n                    \r\n                        <div className=\"hero_image_container\">\r\n\r\n                            <img className=\"hero_image\" src={hero.hero_img} alt={hero.name + \".png\"} />\r\n                        </div>\r\n                    </div>\r\n                    {/*Map an array of abilities to create the ability bar*/}\r\n                    <AbilityList  abilities={hero.abilities} />\r\n                </div>\r\n                \r\n            </div>\r\n            {selected&&infoSelected?(<CardPopout heroInfo={hero} />):(null)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard\r\n","import React from 'react'\r\n\r\nconst ShiftButton = ({ adjustPos }) => {\r\n    return (\r\n        <div>\r\n            <button onClick={adjustPos} className=\"shift_button\">\r\n                <i className=\"fa-circle\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShiftButton\r\n","import React, {useEffect, useState} from 'react'\r\nimport HeroCard from './HeroCard'\r\nimport ShiftButton from './ShiftButton'\r\n\r\nconst CardList = ({ heroes, pos, adjustPos, shiftPos, isLoading, setIsLoading }) => {\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect (() => {\r\n        if (count === heroes.length)\r\n        {\r\n            setIsLoading(false);\r\n            console.log(heroes.length)\r\n        }\r\n        \r\n    }, [count])\r\n\r\n    const scroll = (event) => {\r\n        event.preventDefault();\r\n        adjustPos(event.deltaY)\r\n    }\r\n\r\n\r\n    return (\r\n        isLoading\r\n        ?(<div>Loading</div>)\r\n        :(<div className=\"hero_tape\" onWheel={scroll}>\r\n            <div id=\"button_container_left\">\r\n                <ShiftButton adjustPos={() => adjustPos(-1)}/>\r\n            </div>\r\n            <div id=\"button_container_right\">\r\n                <ShiftButton adjustPos={() => adjustPos(1)}/>\r\n            </div>\r\n            <div className=\"hero_list\" >\r\n                {heroes.map((hero, index) => hero!=null?(<HeroCard key = {hero._id} selected = {index === pos} hero = {hero} index = {index} select={() => shiftPos(index)} />):(null))}\r\n            </div>\r\n        </div>)\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst AttributeButton = ({image, icon, filter, setAttribute, c }) => {\r\n\r\n    const [ selected, setSelected ] = useState(true);\r\n\r\n    return (\r\n        <div className={`attribute_button ${selected?`selected`:``}`} onClick={() => {setAttribute(!selected, filter); setSelected(!selected);  }}>\r\n            {image \r\n                ? (<img className={`${c} ${selected?`selected_img`:``}`} src={image} />)\r\n                : (null)\r\n            }\r\n            {icon\r\n                ? (<i className={`${icon} ${c} ${selected?`selected_icon`:``}`}/>)\r\n                : (null)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttributeButton\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst AttributeList = ({select, showName}) => {\r\n    \r\n    const [index, setIndex] = useState(0);\r\n    const [options, setOptions] = useState([\r\n        {value:\"name\", label:\"Alphabetical\"},\r\n        {value:\"str_strt\", label:\"Base Strength\"},\r\n        {value:\"agi_strt\", label:\"Base Agility\"},\r\n        {value:\"int_strt\", label:\"Base Intelligence\"},\r\n        {value:\"str_gain\", label:\"Strength Gain\"},\r\n        {value:\"agi_gain\", label:\"Agility Gain\"},\r\n        {value:\"int_gain\", label:\"Intelligence Gain\"},\r\n        {value:\"max_dmg\", label:\"Damage\"},\r\n        {value:\"move_spd\", label:\"Move Speed\"},\r\n        {value:\"base_hp\", label:\"Starting HP\"},\r\n        {value:\"base_mana\", label:\"Starting Mana\"},\r\n        {value:\"hp_regen\", label:\"HP Regen\"},\r\n        {value:\"mana_regen\", label:\"Mana Regen\"},\r\n        {value:\"armor\", label:\"Base Armor\"},\r\n        {value:\"BAT\", label:\"Base Attack Time\"},\r\n        {value:\"atck_range\", label:\"Attack Range\"},\r\n        {value:\"projectile_speed\", label:\"Projectile Speed\"},\r\n        {value:\"day_vision\", label:\"Day Vision\"},\r\n        {value:\"night_vision\", label:\"Night Vision\"},\r\n        {value:\"turn_rate\", label:\"Turn Rate\"}\r\n    ])\r\n    const [selected, setSelected] = useState(options[0]);\r\n\r\n    \r\n    useEffect(() => {\r\n        select(selected);\r\n        console.log(selected)\r\n    }, [selected])\r\n    \r\n\r\n    useEffect(() => {\r\n        if(!showName) setOptions([\r\n        {value:\"str_strt\", label:\"Base Strength\"},\r\n        {value:\"agi_strt\", label:\"Base Agility\"},\r\n        {value:\"int_strt\", label:\"Base Intelligence\"},\r\n        {value:\"str_gain\", label:\"Strength Gain\"},\r\n        {value:\"agi_gain\", label:\"Agility Gain\"},\r\n        {value:\"int_gain\", label:\"Intelligence Gain\"},\r\n        {value:\"max_dmg\", label:\"Damage\"},\r\n        {value:\"move_spd\", label:\"Move Speed\"},\r\n        {value:\"base_hp\", label:\"Starting HP\"},\r\n        {value:\"base_mana\", label:\"Starting Mana\"},\r\n        {value:\"hp_regen\", label:\"HP Regen\"},\r\n        {value:\"mana_regen\", label:\"Mana Regen\"},\r\n        {value:\"armor\", label:\"Base Armor\"},\r\n        {value:\"BAT\", label:\"Base Attack Time\"},\r\n        {value:\"atck_range\", label:\"Attack Range\"},\r\n        {value:\"projectile_speed\", label:\"Projectile Speed\"},\r\n        {value:\"day_vision\", label:\"Day Vision\"},\r\n        {value:\"night_vision\", label:\"Night Vision\"},\r\n        {value:\"turn_rate\", label:\"Turn Rate\"}\r\n        \r\n        ])\r\n        setSelected(options[0]);\r\n        }, [])\r\n    \r\n    return (\r\n        <div className=\"dropdown_filter_list\">\r\n            <select className=\"filter_dropdown_list\" name=\"filters\" id=\"filters\"  onChange={(e) => setSelected(options.find((opt) => opt.value === e.target.value))}>\r\n                {options.map((o) => <option value={o.value} label={o.label} />)}\r\n            </select>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttributeList","import React, {useState, useEffect} from 'react'\r\n\r\nconst SecondaryFilter = ({ label, i, delFilter }) => {\r\n    const [id, setId] = useState(i);\r\n\r\n    useEffect(() => {\r\n        console.log(i);\r\n\r\n    })\r\n    return (\r\n        <div className=\"secondary_filter\">\r\n            <div className=\"secondary_filter_text\">{label}</div>\r\n            <div className=\"filter_delete_button\" onClick={() => delFilter(i)}><i className='fas fa-times' /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondaryFilter\r\n","import React from 'react'\r\n\r\nconst OperatorList = ({ setSelectedOp }) => {\r\n\r\n    const operatorOptions = [\r\n        {value:\"greaterthan\", label:\">\", fnc:(a, b) => a>b},\r\n        {value:\"lessthan\", label:\"<\", fnc:(a, b) => a<b},\r\n        {value:\"equalto\", label:\"==\", fnc:(a,b) => a===b},\r\n        {value:\"greaterthanequalto\", label:\">=\", fnc:(a,b) => a>=b},\r\n        {value:\"lessthanequalto\", label:\"<=\",fnc:(a,b) => a<=b}\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <select className=\"operators_list\" name=\"operators\" id=\"operators\" onChange={(e) => setSelectedOp(operatorOptions.find((i) => i.value === e.target.value))}>\r\n                {operatorOptions.map((op) => <option value={op.value} label={op.label} />)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OperatorList\r\n","import React, { useState } from 'react'\r\nimport AttributeList from './AttributeList'\r\nimport OperatorList from './OperatorList';\r\n\r\nconst SecondaryFiltersMenu = ({addFilter}) => {\r\n    const [selectedAttr, setSelectedAttr] = useState({value: \"move_spd\", label: \"Move Speed\"});\r\n    \r\n    const [selectedOp, setSelectedOp] = useState({value: \"greaterthan\", label: \">\", fnc:(a, b) => a>b})\r\n    const [value, setValue] = useState(0)\r\n    \r\n    const f = (hero) => {return selectedOp.fnc(hero[selectedAttr.value], value)}\r\n\r\n    return (\r\n        <div className=\"filters_list_container\">\r\n            <AttributeList select={(s) => setSelectedAttr(s)} showName={false} />\r\n                <OperatorList setSelectedOp={setSelectedOp}/>\r\n\r\n                <form>\r\n                    <input className=\"value_input_field\" type=\"text\" id=\"value\" name=\"value\" onChange={(e) => setValue(e.target.value)}></input>\r\n                </form>\r\n\r\n                <div className=\"secondary_filter_submit\" onClick={() => {addFilter(\r\n                    {id: Math.random()*100, \r\n                    filter: f, \r\n                    value:value, \r\n                    opLabel:selectedOp.label, \r\n                    attrLabel:selectedAttr.label}\r\n                )}}>\r\n                    <i className='fas fa-check'></i>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondaryFiltersMenu\r\n","import React, { useState } from 'react'\r\n\r\nconst SearchBox = ( {getQuery} ) => {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const onChange = (q) => {\r\n        setText(q)\r\n        getQuery(q)\r\n    }\r\n\r\n    return (\r\n        <div className=\"search_container\">\r\n            <div className=\"search\">\r\n                <div className=\"search_image\" ><i className=\"fas fa-search\"></i></div>\r\n                <form>\r\n                    <input \r\n                        type='text' \r\n                        className='input_query'\r\n                        placeholder=''\r\n                        value={text}\r\n                        onChange={(e) => onChange(e.target.value)}\r\n                        autoFocus/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport AttributeButton from './AttributeButton'\r\nimport AttributeList from './AttributeList'\r\nimport SecondaryFilter from './SecondaryFilter'\r\nimport SecondaryFiltersMenu from './SecondaryFiltersMenu'\r\nimport SearchBox from './SearchBox';\r\n\r\nconst FiltersBar = ({ setAttribute, addSecondaryFilter, delSecondaryFilter, setOrderBy, getLimit, setAscending, secondaryFilters, setQuery }) => {\r\n\r\n    const [limit, setLimit] = useState(122);\r\n\r\n    useEffect(() => {\r\n        getLimit(limit);\r\n    }, [limit])\r\n\r\n    //#region Primary Filters\r\n    const attrF = (hero, s) => {\r\n        return hero.attribute!==s;\r\n    }\r\n\r\n    const atckF = (hero, s) => {\r\n        return hero.atck_type!==s;\r\n    }\r\n\r\n    const sexF = (hero, s) => {\r\n        return hero.sex!==s;\r\n    }\r\n    \r\n    const strF = function(hero) {return attrF(hero, \"STR\")};\r\n    const agiF = function(hero) {return attrF(hero, \"AGI\")};\r\n    const intF = function(hero) {return attrF(hero, \"INT\")};\r\n\r\n    const meleeF = function(hero) {return atckF(hero, \"Melee\")}\r\n    const rangeF = function(hero) {return atckF(hero, \"Ranged\")}\r\n\r\n    const maleF = function(hero) {return sexF(hero, \"M\")}\r\n    const femaleF = function(hero) {return sexF(hero, \"F\")}\r\n    const noneF = function(hero) {return sexF(hero, \"N\")}\r\n\r\n    //#endregion Primary Filters\r\n    //#region Secondary Filters\r\n\r\n    const onLimitChange = (v) => {\r\n        let result = v.replace(/[^0-9]/, \"\");\r\n        result=(result>122)?122:result;\r\n        setLimit(result)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"filter_bar\">\r\n            <div className=\"filter_bar_name_container\">Filters</div>\r\n            <div className=\"filters\">\r\n                <div className=\"dicrete_categories\">\r\n                    <div className=\"attributes_filter_container\">\r\n                        <AttributeButton c={\"attribute_image\"} image=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_strength.png\" filter={strF} setAttribute={setAttribute}/>\r\n                        <AttributeButton c={\"attribute_image\"} image=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_agility.png\" filter={agiF} setAttribute={setAttribute}/>\r\n                        <AttributeButton c={\"attribute_image\"} image=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/hero_intelligence.png\" filter={intF} setAttribute={setAttribute}/>\r\n                    </div>\r\n                    <div className=\"attack_style_filter_container\">\r\n                        <AttributeButton c={\"attack_image\"} image=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/melee.svg\" filter={meleeF} setAttribute={setAttribute}/>\r\n                        <AttributeButton c={\"attack_image\"} image=\"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/icons/ranged.svg\" filter={rangeF} setAttribute={setAttribute}/>\r\n                    </div>\r\n                    <div className=\"sex_filter_container\">\r\n                        <AttributeButton c={\"gender_icon\"} icon = {\"fas fa-mars\"} filter={maleF} setAttribute={setAttribute} />\r\n                        <AttributeButton c={\"gender_icon\"} icon = {\"fas fa-venus\"} filter={femaleF} setAttribute={setAttribute}/>\r\n                        <AttributeButton c={\"gender_icon\"} icon = {\"fas fa-genderless\"} filter={noneF} setAttribute={setAttribute}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"continuous_categories\">\r\n                    <SecondaryFiltersMenu addFilter={addSecondaryFilter}/>\r\n                    <div className=\"secondary_filter_list\">\r\n                        {secondaryFilters.map((sf) => <SecondaryFilter filter={sf.filter} label={sf.attrLabel + \" \" + sf.opLabel + \" \" + sf.value} delFilter={delSecondaryFilter} i={sf.id}/>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"sortby\">\r\n                    <AttributeList select={(s) => setOrderBy(s.value)} showName={true}/>\r\n                    <div className=\"limit_container\">\r\n                        <label htmlFor=\"limittext\">Limit:</label>\r\n                        <input \r\n                            className=\"text_input\"\r\n                            id=\"limittext\" \r\n                            type=\"text\" \r\n                            value={limit} \r\n                            onChange={(e) => onLimitChange(e.target.value)}\r\n                            maxLength=\"3\"\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"radio_container\" >\r\n                        Ascending\r\n                        <input className=\"radio\" type=\"radio\" id=\"ascending_button\" name=\"sort\" value=\"asc\" onClick={() => setAscending(1)} defaultChecked=\"true\"></input>\r\n                    </div>\r\n                    <div className=\"radio_container\">\r\n                        Descending\r\n                        <input className=\"radio\" type=\"radio\" id=\"descending_button\" name=\"sort\" value=\"dsc\" onClick={() => setAscending(-1)}></input>\r\n                    </div>\r\n                    <SearchBox getQuery={(q) => setQuery(q)}/> \r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FiltersBar\r\n","import './App.css';\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport CardList from './Components/CardList';\r\nimport FiltersBar from './Components/FiltersBar';\r\n\r\nconst heroesPerDecque = 7;\r\nconst beginningSize = parseInt(heroesPerDecque/2+1)\r\nconst totalCardWidth = 358;\r\n\r\n\r\nfunction App() {\r\n  const[heroes, setHeroes] = useState([])\r\n    const [filteredHeroes, setFilteredHeroes] = useState([])\r\n    const [limitedFilteredHeroes, setLimitedFilteredHeroes] = useState([])\r\n  //Position of the currently selected hero in the heroes array\r\n  const[selectedHeroPos, setSelectedHeroPos] = useState(0)\r\n  const[isLoading, setIsLoading] = useState(true)\r\n  const[query, setQuery] = useState(\"\")\r\n  const[filters, setFilters] = useState([])\r\n  const[orderBy, setOrderBy] = useState(\"name\");\r\n  const[listLimit, setListLimit] = useState(122);\r\n  const[ascending, setAscending] = useState(1);\r\n  const[secondaryFilters, setSecondaryFilters] = useState([])\r\n\r\n  const[heroDecque, setHeroDecque] = useState([])\r\n\r\n//#region Functions\r\n\r\n    const incrementPos = async (i) => {\r\n        if (i > 0 && selectedHeroPos < limitedFilteredHeroes.length) {\r\n            //MOVE RIGHT\r\n            //if (((limitedFilteredHeroes.length < beginningSize) || (limitedFilteredHeroes.length > beginningSize && limitedFilteredHeroes.length < heroesPerDecque))) {\r\n            if ((limitedFilteredHeroes.length < beginningSize || (limitedFilteredHeroes.length >= beginningSize && limitedFilteredHeroes.length <= heroesPerDecque)) && selectedHeroPos !== limitedFilteredHeroes.length - 1) {\r\n                setSelectedHeroPos(selectedHeroPos + 1)\r\n            }\r\n\r\n            //GROW RIGHT\r\n            else if (heroDecque[0] === 0 && heroDecque.length < heroesPerDecque && heroDecque[heroDecque.length - 1] !== limitedFilteredHeroes.length - 1) {\r\n                setHeroDecque([...heroDecque, heroDecque[heroDecque.length - 1] + 1]);\r\n                console.log('Grow Right')\r\n                setSelectedHeroPos(selectedHeroPos + 1)\r\n            }\r\n            //SHRINK RIGHT\r\n            else if (heroDecque[heroDecque.length - 1] === limitedFilteredHeroes.length - 1 && heroDecque.length > beginningSize && heroDecque[0] != 0) {\r\n                setHeroDecque(heroDecque.slice(1));\r\n                console.log('Shrink Right')\r\n            }\r\n            //SHIFT RIGHT\r\n            else if (heroDecque.length === heroesPerDecque && (limitedFilteredHeroes.length > heroesPerDecque || (heroDecque[0] !== selectedHeroPos && heroDecque[heroDecque.length - 1] !== selectedHeroPos))) {\r\n                setHeroDecque([...heroDecque.slice(1), heroDecque[heroDecque.length - 1] + 1]);\r\n                console.log('Shift Right')\r\n            }\r\n        }\r\n        else if (i < 0 && selectedHeroPos > 0) {\r\n            //MOVE LEFT\r\n            //if (limitedFilteredHeroes.length <= beginningSize || (limitedFilteredHeroes.length >= beginningSize && limitedFilteredHeroes.length <= heroesPerDecque)) {\r\n            if ((limitedFilteredHeroes.length < beginningSize || (limitedFilteredHeroes.length >= beginningSize && limitedFilteredHeroes.length <= heroesPerDecque)) && selectedHeroPos !== 0) {\r\n                setSelectedHeroPos(selectedHeroPos - 1);\r\n            }\r\n            //GROW LEFT\r\n            else if (heroDecque[heroDecque.length - 1] === limitedFilteredHeroes.length - 1 && heroDecque.length < heroesPerDecque && heroDecque[0] != 0) {\r\n                setHeroDecque([heroDecque[0] - 1, ...heroDecque])\r\n                console.log('Grow Left')\r\n            }\r\n            //SHRINK LEFT\r\n            else if (heroDecque[0] === 0 && heroDecque.length > beginningSize && heroDecque[heroDecque.length - 1] != limitedFilteredHeroes.length - 1) {\r\n                setHeroDecque(heroDecque.slice(0, heroDecque.length - 1))\r\n                console.log('Shrink Left')\r\n                setSelectedHeroPos(selectedHeroPos - 1)\r\n            }\r\n            //SHIFT LEFT\r\n            else if (heroDecque.length === heroesPerDecque) {\r\n                setHeroDecque([heroDecque[0] - 1, ...heroDecque.slice(0, heroDecque.length - 1)])\r\n                console.log('Shift Left')\r\n\r\n            }\r\n        }\r\n    }\r\n  //Take a value and find the difference between it and the currently selected position. Use the difference to determine movement.\r\n    const shiftPos = (i) => {\r\n        let pos = heroDecque[i];\r\n        setPos(pos);\r\n \r\n  }\r\n\r\n    //Take a specific position of the filteredHeroes array and use it as the pivot of the heroDecque\r\n    const setPos = (i) => {\r\n        let half = beginningSize - 1;\r\n        let pos = i;\r\n\r\n        //In case we are only incrementing, then use the incrementPos function\r\n        /*\r\n        let a = i - selectedHeroPos\r\n        if (Math.abs(a) === 1) {\r\n            incrementPos(a);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (limitedFilteredHeroes.length <= heroesPerDecque) {\r\n            setSelectedHeroPos(i)\r\n        }\r\n        else if (limitedFilteredHeroes.length > heroesPerDecque) {\r\n            //To move, create both halves of the decque and join them together\r\n            let half1 = [], half2 = [];\r\n            for (let j = pos - 1; j >= pos - half && j >= 0; j--) {\r\n                half1.unshift(j);\r\n            }\r\n\r\n            for (let j = pos + 1; j <= pos + half && j < limitedFilteredHeroes.length; j++) {\r\n                half2.push(j);\r\n            }\r\n\r\n            setHeroDecque([...half1, pos, ...half2])\r\n            setSelectedHeroPos(half1.length)\r\n        }\r\n    }\r\n\r\n\r\n  const addFilter = async (s) => {\r\n    console.log(filters)\r\n    setFilters([...filters, s]);\r\n    console.log(filters);\r\n  }\r\n\r\n  const removeFilter = async(s) => {\r\n    console.log(filters)\r\n    setFilters(filters.filter(f => f.name !== s.name))\r\n    console.log(filters)\r\n  }\r\n\r\n  const setFilter = (selected, filter) => {\r\n    selected?removeFilter(filter):addFilter(filter);\r\n}\r\n\r\n  const addSecondaryFilter = (secondaryFilter) => {\r\n    if (secondaryFilters.length == 3)\r\n    {\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      console.log(secondaryFilter)\r\n      setSecondaryFilters([...secondaryFilters, secondaryFilter])\r\n    }\r\n  }\r\n\r\n  const removeSecondaryFilter = (id) => {\r\n    console.log(id)\r\n    setSecondaryFilters(secondaryFilters.filter((sf) => sf.id != id));\r\n  }\r\n\r\n  const sortHeroes = (arr) => {\r\n    return arr.sort((a, b) => {\r\n      let i = 1, j = -1;\r\n      i *= ascending;\r\n      j *= ascending;\r\n      return a[orderBy]>b[orderBy]?i:j;\r\n    }).map(i => i)\r\n  }\r\n//#endregion\r\n//#region Effects\r\n\r\n\r\n  //On start, get all heroes from the database\r\n  useEffect(() => {\r\n    const fetchHeroes = async () => {\r\n\r\n      const result = await fetch('http://localhost:5000/', {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n      })\r\n\r\n      let h = await result.json();\r\n      setHeroes(h);\r\n      setFilteredHeroes(h);\r\n    }\r\n\r\n    fetchHeroes();\r\n\r\n    }, \r\n    [])\r\n\r\n    useEffect(() => {\r\n        setLimitedFilteredHeroes(filteredHeroes.slice(0, listLimit));\r\n        console.log('length: ' + filteredHeroes.length)\r\n    }, [filteredHeroes])\r\n\r\n    useEffect(() => {\r\n        let size = limitedFilteredHeroes.length <= heroesPerDecque ? limitedFilteredHeroes.length : beginningSize;\r\n        //let size = limitedFilteredHeroes.length < beginningSize ? limitedFilteredHeroes.length : beginningSize;\r\n        let a = new Array(size);\r\n        for (let i = 0; i < size; i++)\r\n            a[i] = i;\r\n\r\n        setHeroDecque(a)\r\n        setSelectedHeroPos(0);\r\n    }, [limitedFilteredHeroes])\r\n\r\n    useEffect(() => {\r\n       console.log(heroDecque) \r\n    }, [heroDecque])\r\n\r\n\r\n\r\n  //When a name is provided by the user, the hero whose name is closest to the query is selected/FIND THE BEST MATCH\r\n    //To work with the heroDecque, the found hero is placed in the middle of the decque, and the heroes in the immediate viscinity will fill in the rest\r\n    //EXCEPTION: There are not enough heroes to fill the heroDecque.\r\n        //In this case, fill in the heroDecque as much as possible with heroes, and resort to using NULL values when none are available\r\n\r\n    //TODO: Rewrite this effect to work with the decque system\r\n  useEffect(() => {\r\n    let docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).startsWith(query.toLowerCase()));\r\n    console.log(docs);\r\n    if (docs.length === 0)\r\n    {\r\n      docs = filteredHeroes.filter((hero) => (hero.name.toLowerCase()).includes(query.toLowerCase()));\r\n      console.log(docs);\r\n    }\r\n    if (docs.length === 0)\r\n    {\r\n      return;\r\n    }\r\n\r\n    //Find the index of the item\r\n    let pos = filteredHeroes.findIndex((hero) => docs[0]._id === hero._id);\r\n    \r\n      if (pos >= 0) {\r\n          setPos(pos);\r\n      }\r\n  }, [query])\r\n\r\n    useEffect(() => {\r\n        console.log('selectedHeroPos: ' + selectedHeroPos)\r\n    }, [selectedHeroPos])\r\n  //When the filters are updated, then get all the heroes that pass each filter\r\n    //TODO: Update to work with the decque system\r\n    //When the filters change, the heroDecque will need to be updated along with filteredHeroes\r\n    useEffect(() => {\r\n    let h = heroes;\r\n    filters.forEach((f) => {\r\n      h = h.filter(hero => f(hero));\r\n    })\r\n\r\n    secondaryFilters.forEach((sf) => {\r\n      h = h.filter((hero) => sf.filter(hero));\r\n    })\r\n\r\n    setFilteredHeroes(sortHeroes(h));\r\n    setSelectedHeroPos(0);\r\n    \r\n  }, [filters, secondaryFilters])\r\n\r\n    useEffect(() => {\r\n        setLimitedFilteredHeroes(filteredHeroes.slice(0, listLimit))\r\n    }, [listLimit])\r\n\r\n  useEffect(() => {\r\n    //setSelectedHeroPos(0);\r\n    console.log(\"Loaded\")\r\n  }, [isLoading])\r\n\r\n  useEffect(() => {\r\n    setFilteredHeroes(sortHeroes(filteredHeroes));\r\n  }, [orderBy, ascending])\r\n\r\n//#endregion \r\n  \r\nreturn (\r\n    <div className=\"App\">\r\n      <div className=\"hero_card_page\">\r\n        <FiltersBar \r\n          setAttribute={setFilter} \r\n          addSecondaryFilter={addSecondaryFilter}\r\n          delSecondaryFilter={removeSecondaryFilter} \r\n          setOrderBy={setOrderBy} \r\n          getLimit={(l) => setListLimit(l)} \r\n          setAscending={setAscending} \r\n          secondaryFilters={secondaryFilters}\r\n          setQuery={setQuery}\r\n          />\r\n        \r\n        <div id=\"hero_tape_container\">\r\n          {/*The CardList will take the array of heroes that are to be displayed, as well as methods for changing what those heroes are*/}\r\n                <CardList heroes={limitedFilteredHeroes.slice(heroDecque[0], heroDecque[heroDecque.length - 1] + 1)} pos={selectedHeroPos} adjustPos={incrementPos} shiftPos={shiftPos }isLoading={isLoading} setIsLoading={setIsLoading} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}